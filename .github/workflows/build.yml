# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: IjkPlayer Build

on:
  workflow_dispatch:
  push:
    branches: [master]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r14b
          add-to-path: true
      
      - name: Check NDK path
        run: |
          echo ${{ steps.setup-ndk.outputs.ndk-path }}
          
      - name: install homebrew, git, yasm
        run: |
          ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
          brew install git
          brew install yasm
          
      - name: Build ijkplayer
        run: |
          export ANDROID_NDK=${{ steps.setup-ndk.outputs.ndk-path }}
          ./init-android.sh
          ./init-android-openssl.sh
          cd ./android/contrib
          ./compile-openssl.sh clean
          ./compile-openssl.sh all
          ./compile-ffmpeg.sh clean
          ./compile-ffmpeg.sh all
          cd ..
          ./compile-ijk.sh all
      - name: Clean objs
        run: |
          find . -type d -name "obj" | xargs rm -rf

      - name: ZIP ijkplayer
        run: |
          ls
          cd ijkplayer-android
          cd android
          zip -r ijkplayer.zip ./ijkplayer/
          
      - name: Upload ZIP
        uses: actions/upload-artifact@v1
        with:
          name: ijkplayer
          path: ./ijkplayer-android/android/ijkplayer.zip

      - name: Setup Debug Session
        uses: csexton/debugger-action@master
